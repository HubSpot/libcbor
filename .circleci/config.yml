version: 2.1

linux-setup: &linux-setup >
  sudo apt-get update &&
  sudo apt-get install -y gcc clang g++ cmake clang-format-8 cppcheck valgrind &&
  sudo apt install libcmocka-dev

build-test: &build-test >
  cmake -DWITH_TESTS=ON \
      -DCBOR_CUSTOM_ALLOC=ON \
      -DCMAKE_BUILD_TYPE=Debug \
      -DSANITIZE=OFF \
      . &&
  make VERBOSE=1 &&
  ctest -VV

jobs:
  static-test:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run: *linux-setup
      - run: cppcheck . --error-exitcode=1
      - run: bash clang-format.sh --verbose && git diff-index --quiet HEAD

  build-and-test:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run: *linux-setup
      - run: *build-test
        # TODO: Reenable, currently fails on libjson leak (package out of date)
        # The issue actually seems to be in the instrumentation code, not
        # libcbor (we don't use libjsoncpp)
        # https://github.com/open-source-parsers/jsoncpp/issues/507
      #      - run: >
      #          ctest --output-on-failure -T memcheck | tee memcheck.out
      #          if grep -q 'Memory Leak\|IPW\|Uninitialized Memory Conditional\|Uninitialized Memory Read' memcheck.out; then
      #            exit 1
      #          fi;
      # TODO: Migrate codecov support from Travis
      # TODO: Set up OSX

  build-and-test-clang:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run: *linux-setup
      - run: >
          export CC=/usr/bin/clang
          export CXX=/usr/bin/clang++
      - run: *build-test

  build-and-test-arm:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    steps:
      - checkout
      - run: *linux-setup
      - run: *build-test

  build-bazel:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run: *linux-setup
      - run: sudo apt install apt-transport-https curl gnupg
      - run: curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
      - run: sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
      - run: echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
      - run: sudo apt update && sudo apt install bazel
      - run: bazel --version
      - run: >
          pushd examples/bazel
          bazel run -s src:hello

workflows:
  build-and-test:
    jobs:
      - static-test
      - build-and-test
      - build-and-test-clang
      - build-and-test-arm
      - build-bazel
